name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  NODE_VERSION: '20.x'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:
    runs-on: ubuntu-latest

    outputs:
      image: ${{ steps.image.outputs.image }}
      digest: ${{ steps.build.outputs.digest }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

          
  deploy-production:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
      url: https://api.magnolia.com

    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: Convert repo name to lowercase
        id: repo
        run: echo "REPO_LC=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Deploy to VPS
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "
            echo 'ðŸ“‚ Moving to project directory...'
            cd var || exit 1
            cd www
            cd Magnolia-Touch-Backend

            echo 'ðŸ”„ Resetting local repo and pulling latest code...'
            git fetch --all
            git reset --hard origin/main
            git pull origin main
            npm install
            npx prisma migrate deploy
            npx prisma generate
            npm run build
            npm run seed
            docker build -t nestjs-app .

            echo 'ðŸš€ Stopping old container...'
            docker stop nestjs-container
            docker rm nestjs-container
            docker run -d \
              --name nestjs-container \
              -p 3000:3000 \
              --env-file .env \
              nestjs-app

            echo 'ðŸ§¹ Cleaning up unused data...'
            docker system prune -af --volumes
            echo 'âœ… Deployment complete!'
          "

